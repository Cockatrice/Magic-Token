name: Picture Health

on:
  pull_request:
  workflow_dispatch:
  schedule:
    # Runs at the start of each month (UTC)
    - cron: '0 0 1 * *'

jobs:
  check_urls:
    # Do not run the scheduled workflow on forks
    if: ( github.event_name != 'schedule' || github.repository_owner == 'Cockatrice' )

    name: Check image links
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Lychee responses cache
        uses: actions/cache@v3
        with:
          path: .lycheecache
          key: cache-lychee-${{ github.sha }}
          restore-keys: cache-lychee-

      #- name: Install XMLStarlet
      #  shell: bash
      #  run: sudo apt-get install xmlstarlet 

      #- name: Extract URLs from tokens.xml
      #  if: always()
      #  id: tokens_pic_urls
      #  shell: bash
      #  run: xmlstarlet sel -t -v "//set/@picURL" tokens.xml | tee tokens_pic_urls.txt

      #- name: Extract URLs from challenge_tokens.xml
      #  # Forcefully skipping, see https://github.com/Cockatrice/Magic-Token/issues/47
      #  # if: always()
      #  if: false
      #  id: challenge_pic_urls
      #  shell: bash
      #  run: xmlstarlet sel -t -v "//set/@picURL" challenge_tokens.xml | tee challenge_pic_urls.txt

      #- name: List duplicated image links
      #  if: steps.tokens_pic_urls.outcome == 'success'
      #  shell: bash
      #  # Remove blank lines | trim trailing integers (Scryfall) | sort | count and list duplicates
      #  run: |
      #    grep . tokens_pic_urls.txt | sed 's/\.jpg?.*/.jpg/' | sort | uniq -cd
          # Add link to results to summary
          # not possible yet due to missing job id number: https://github.community/t/get-action-job-id/17365
          # echo "[ðŸªž Duplicated Image Links]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/runs/JOB_ID#step:7:0)" >> $GITHUB_STEP_SUMMARY

      #- name: Image hosting statistics
      #  if: steps.tokens_pic_urls.outcome == 'success'
      #  shell: bash
      #  # Extract domains from URLs | remove blank lines | sort | count and list | sort descending
      #  run: |
      #    awk -F/ '{print $3}' tokens_pic_urls.txt | grep . | sort | uniq -c | sort -nr
          # Add link to results to summary
          # not possible yet due to missing job id number: https://github.community/t/get-action-job-id/17365
          # echo "[ðŸ“Š Image Hosting Statistics]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/runs/JOB_ID#step:8:0)" >> $GITHUB_STEP_SUMMARY

      #- name: Check tokens.xml URLs (directly)
      #  uses: lycheeverse/lychee-action@v1.5.0
        #if: false
        #if: steps.tokens_pic_urls.outcome == 'success'
      #  with:
      #    args: '--no-progress --require-https --cache --max-cache-age 1h -- tokens.xml'
      #    fail: true
      #    jobSummary: true

      - name: Check standard.json URLs (directly)
        uses: lycheeverse/lychee-action@v1.5.0
        with:
          args: '--no-progress --require-https --cache --max-cache-age 1h -- https://mtgjson.com/api/v5/Standard.json'
          fail: true
          jobSummary: true

      - name: Dump challenge_tokens.xml URLs
        uses: lycheeverse/lychee-action@v1.5.0
        with:
          args: '--dump --format detailed -- challenge_tokens.xml'
          fail: true
          jobSummary: false

      - name: Print output from above dump
        shell: bash
        run: cat /tmp/lychee/out.md

      - name: Check challenge_tokens.xml URLs
        uses: lycheeverse/lychee-action@v1.5.0
        if: steps.challenge_pic_urls.outcome == 'success'
        with:
          args: '--no-progress --require-https --cache --max-cache-age 1h -- challenge_pic_urls.txt'
          fail: true
          jobSummary: true
